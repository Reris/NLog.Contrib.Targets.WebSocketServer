1. Get the application URL by running these commands:
{{- if .Values.ingress }}
{{- if .Values.ingress.enabled }}
{{- range $host := .Values.ingress.hosts }}
  {{- range $.Values.ingress.paths }}
  http{{ if $.Values.ingress.tls }}s{{ end }}://{{ $host }}{{ . }}
  {{- end }}
{{- end }}
{{- end }}
{{- else if contains "ClusterIP" (include "apiTemplate.service.type" .) }}
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl port-forward {{ include "apiTemplate.fullname" . }} 8080:{{ include "apiTemplate.service.port" . }}
{{- else if contains "NodePort" (include "apiTemplate.service.type" .) }}
  export NODE_PORT=$(kubectl get --namespace {{ .Release.Namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "apiTemplate.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Release.Namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" (include "apiTemplate.service.type" .) }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get svc -w {{ include "apiTemplate.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Release.Namespace }} {{ include "apiTemplate.fullname" . }} -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
  echo http://$SERVICE_IP:{{ include "apiTemplate.service.port" . }}
{{- end }}
